{"version":3,"sources":["cgu_multiButton.js","HelloCGU.js","App.js","reportWebVitals.js","index.js"],"names":["CounterButton","props","state","counter","handleClick","bind","event","this","setState","console","log","text","onClick","React","Component","changeText","target","innerText","MultiButton","num","output","i","push","variant","color","styleArgument","fontSize","HelloCGU","style","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAEMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAQ,GAEV,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALF,E,+CAQrB,SAAYC,GACVC,KAAKC,SAAS,CAACL,QAASI,KAAKL,MAAMC,QAAQ,IAC3CM,QAAQC,IAAIH,KAAKL,S,oBAEnB,WACG,IAAIS,EAAOJ,KAAKL,MAAMC,QACtB,OACE,yBAAQS,QAASL,KAAKH,YAAtB,+BACMO,EADN,iB,GAhBuBE,IAAMC,WAsB5BC,EAAa,SAACT,GAClBG,QAAQC,IAAIJ,EAAMU,QAClBV,EAAMU,OAAOC,UAAYX,EAAMU,OAAOC,UAAW,sBASpCC,EAPG,SAACC,GAEjB,IADA,IAAIC,EAAO,GACHC,EAAE,EAAEA,EAAEF,EAAI,IAAIE,EACpBD,EAAOE,KAAK,eAAC,EAAD,CAAeC,QAAQ,YAAYC,MAAM,YAAYZ,QAASG,EAA9D,mBAA4EM,EAA5E,yBACd,OAAOD,GChCHK,EAAgB,CAAEC,SAAS,QAASF,MAAM,OAKjCG,EAHE,SAACrB,GACd,OAAM,oBAAIsB,MAASH,EAAb,4BCcKI,MAbf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,8BACGH,MAEH,8BACGT,EAAY,UCCNa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2c739a6a.chunk.js","sourcesContent":["//import CounterButton from './CounterButton.js';\r\nimport React from 'react';\r\nclass CounterButton extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      counter:0\r\n    }\r\n    this.handleClick = this.handleClick.bind(this)\r\n}\r\n \r\nhandleClick(event) {\r\n  this.setState({counter: this.state.counter+1});\r\n  console.log(this.state);\r\n}\r\nrender() {  \r\n   var text = this.state.counter;\r\n   return(\r\n     <button onClick={this.handleClick}>\r\n       你點了{text}次.\r\n     </button>\r\n     );\r\n}\r\n}\r\nconst changeText = (event) => {\r\n  console.log(event.target)\r\n  event.target.innerText = event.target.innerText +\"被點了\"\r\n}\r\nconst MultiButton=(num)=>{\r\n  var output=[];\r\n  for(let i=1;i<num+1;++i)\r\n    output.push(<CounterButton variant=\"contained\" color=\"secondary\" onClick={changeText}>第{i}個按鍵</CounterButton>)\r\n  return output;\r\n}\r\n\r\nexport default MultiButton; ","const styleArgument = { fontSize:'100px', color:'red' };\r\n\r\nconst HelloCGU = (event) => {\r\n    return<h1 style = {styleArgument}> Hello CGU!! </h1>;\r\n}\r\nexport default HelloCGU;","import './App.css';\nimport MultiButton from './cgu_multiButton';\nimport HelloCGU from './HelloCGU';\n\nfunction App() {\n  return(\n    <div className=\"App\">\n      <div>\n        {HelloCGU()}\n      </div>\n      <div>\n        {MultiButton(10)}\n      </div>\n  </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}