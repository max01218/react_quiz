{"version":3,"sources":["DATA.js","cgu_multiButton.js","HelloCGU.js","App.js","reportWebVitals.js","index.js"],"names":["columns","rows","id","lastName","firstName","age","MultiButtonData","num","style","height","width","pagesize","checkboxSelection","changeText","event","console","log","target","innerText","MultiButton","output","i","push","Button","variant","color","onClick","styleArgument","fontSize","HelloCGU","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAEMA,EAAU,CAAC,KAAQ,WAAc,YAAe,OAChDC,EAAO,CACT,CAAEC,GAAI,EAAGC,SAAU,OAAQC,UAAW,MAAOC,IAAK,IAClD,CAAEH,GAAI,EAAGC,SAAU,YAAaC,UAAW,SAAUC,IAAK,IAC1D,CAAEH,GAAI,EAAGC,SAAU,YAAaC,UAAW,QAASC,IAAK,IACzD,CAAEH,GAAI,EAAGC,SAAU,QAASC,UAAW,OAAQC,IAAK,IACpD,CAAEH,GAAI,EAAGC,SAAU,YAAaC,UAAW,WAAYC,IAAK,MAC5D,CAAEH,GAAI,EAAGC,SAAU,aAAcC,UAAW,KAAMC,IAAK,KACvD,CAAEH,GAAI,EAAGC,SAAU,WAAYC,UAAW,UAAWC,IAAK,IAC1D,CAAEH,GAAI,EAAGC,SAAU,UAAWC,UAAW,UAAWC,IAAK,IACzD,CAAEH,GAAI,EAAGC,SAAU,QAASC,UAAW,SAAUC,IAAK,KAS3CC,EANS,SAACC,GACrB,OAAQ,qBAAKC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAlC,SACJ,cAAC,IAAD,CAAUT,KAAMA,EAAMD,QAASA,EAASW,SAAU,EAAGC,mBAAiB,O,QCfxEC,EAAa,SAACC,GAClBC,QAAQC,IAAIF,EAAMG,QAClBH,EAAMG,OAAOC,UAAYJ,EAAMG,OAAOC,UAAW,sBASpCC,EAPG,SAACZ,GAEjB,IADA,IAAIa,EAAO,GACHC,EAAE,EAAEA,EAAEd,EAAI,IAAIc,EACpBD,EAAOE,KAAK,eAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAASb,EAArD,mBAAmEQ,EAAnE,yBACd,OAAOD,GCVHO,EAAgB,CAAEC,SAAS,QAASH,MAAM,OAKjCI,EAHE,SAACf,GACd,OAAM,oBAAIN,MAASmB,EAAb,4BCuCKG,MAhBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,8BACGF,MAEH,8BACGV,EAAY,MAEf,8BACGb,EAAgB,SCxBV0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.68c616d2.chunk.js","sourcesContent":["import { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst columns = ['id' ,  'lastname' ,  'firstname' ,  'age' ];\r\nconst rows = [\r\n    { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n    { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n    { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n    { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n];\r\n\r\nconst MultiButtonData = (num) => {\r\n    return (<div style={{ height: 400, width: '50%' }}>\r\n        <DataGrid rows={rows} columns={columns} pagesize={5} checkboxSelection />\r\n    </div>);\r\n}\r\n\r\nexport default MultiButtonData;","import Button from '@material-ui/core/Button';\r\n\r\nconst changeText = (event) => {\r\n  console.log(event.target)\r\n  event.target.innerText = event.target.innerText +\"被點了\"\r\n}\r\nconst MultiButton=(num)=>{\r\n  var output=[];\r\n  for(let i=1;i<num+1;++i)\r\n    output.push(<Button variant=\"contained\" color=\"primary\" onClick={changeText}>第{i}個按鍵</Button>)\r\n  return output;\r\n}\r\n\r\nexport default MultiButton;","const styleArgument = { fontSize:'100px', color:'red' };\r\n\r\nconst HelloCGU = (event) => {\r\n    return<h1 style = {styleArgument}> Hello CGU!! </h1>;\r\n}\r\nexport default HelloCGU;","import './App.css';\nimport MultiButtonData from './DATA';\nimport MultiButton from './cgu_multiButton';\nimport HelloCGU from './HelloCGU';\n\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\nfunction App() {\n  return(\n    <div className=\"App\">\n      <div>\n        {HelloCGU()}\n      </div>\n      <div>\n        {MultiButton(10)}\n      </div>\n      <div>\n        {MultiButtonData(5)}\n      </div>\n  </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}